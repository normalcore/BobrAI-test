{
    "openapi": "3.0.0",
    "info": {
      "title": "Logs API",
      "description": "API for retrieving user request logs from the database.",
      "version": "1.0.0"
    },
    "paths": {
      "/logs": {
        "get": {
          "summary": "Retrieve logs",
          "description": "Fetches a paginated list of logs from the database. Optionally filters logs by date. Add startDate and endDate to query params in ISO 8601 format.",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "required": false,
              "description": "Page number for pagination (default is 1).",
              "schema": {
                "type": "integer",
                "example": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "description": "Number of logs per page (default is 10).",
              "schema": {
                "type": "integer",
                "example": 10
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "required": false,
              "description": "Start date for filtering logs (format: YYYY-MM-DD).",
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "required": false,
              "description": "End date for filtering logs (format: YYYY-MM-DD).",
              "schema": {
                "type": "string",
                "format": "date"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response with a list of logs",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "description": "ID of the user"
                        },
                        "user_request": {
                          "type": "string",
                          "description": "The request made by the user"
                        },
                        "bot_response": {
                          "type": "string",
                          "description": "Response from the bot"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp of the request"
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message for server issues"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/logs/{id}": {
        "get": {
          "summary": "Retrieve logs for a specific user",
          "description": "Fetches a paginated list of logs for a specific user based on user ID. Optionally filters by date.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "description": "ID of the user whose logs are to be retrieved.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "description": "Page number for pagination (default is 1).",
              "schema": {
                "type": "integer",
                "example": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "description": "Number of logs per page (default is 10).",
              "schema": {
                "type": "integer",
                "example": 10
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "required": false,
              "description": "Start date for filtering logs (format: YYYY-MM-DD).",
              "schema": {
                "type": "string",
                "format": "date"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "required": false,
              "description": "End date for filtering logs (format: YYYY-MM-DD).",
              "schema": {
                "type": "string",
                "format": "date"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response with a list of logs for the specified user",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "description": "ID of the user"
                        },
                        "user_request": {
                          "type": "string",
                          "description": "The request made by the user"
                        },
                        "bot_response": {
                          "type": "string",
                          "description": "Response from the bot"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp of the request"
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "User not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message indicating user not found"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "description": "Error message for server issues"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }